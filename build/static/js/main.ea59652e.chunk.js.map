{"version":3,"sources":["reportWebVitals.js","components/Alertas.js","contexts/AlertasContext.js","Grid.js","components/Header.js","Editor.js","mosaicEditor.js","Login.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","Alertas","alerts","React","createElement","className","map","alert","key","id","type","message","AlertasContext","createContext","useAlertas","useContext","AlertasProvider","children","setAlerts","useState","removeAlert","prevAlerts","filter","Provider","value","addAlert","arguments","length","undefined","Date","now","setTimeout","Grid","displayIcons","setDisplayIcons","isModalOpen","setIsModalOpen","iframeSrc","setIframeSrc","isPositionSelectorActive","setIsPositionSelectorActive","isDataFetchActive","setIsDataFetchActive","hoveredPosition","setHoveredPosition","selectedMosaicData","setSelectedMosaicData","hoveredIconData","setHoveredIconData","navigate","useNavigate","fetchIconsAndMosaics","async","mosaicsResponse","fetch","headers","ngrok-skip-browser-warning","mosaicsData","json","combinedData","Promise","all","iconResponse","mosaic","id_icone","iconData","src","data","imgBlob","Blob","Uint8Array","imgUrl","URL","createObjectURL","item","error","console","useEffect","fetchMosaicByPosition","row","col","response","localStorage","setItem","JSON","stringify","document","cookie","log","positionRow","getCookie","positionCol","name","parts","split","pop","shift","closeModal","copyPositionToCookiesAndNavigate","positionText","navigator","clipboard","writeText","catch","err","updateMosaicInDatabase","mosaicData","method","Content-Type","body","posicao_linha","posicao_coluna","ok","renderIcon","icon","onMouseEnter","titulo_celula","onMouseLeave","alt","onClick","conteudo_efetivo","origemConteudo","handleIconClick","origem_conteudo","squares","Array","from","_","iconInSquare","find","onMouseOver","handleMouseOver","handlePositionSelect","updatedData","flat","togglePositionSelector","toggleDataFetch","Link","to","stopPropagation","title","frameBorder","allowFullScreen","Header","logoImage","setLogoImage","mimetype","blob","imageUrl","fetchLogoImage","IconEditor","formData","setFormData","descricao","id_implementacao","iconIds","setIconIds","selectedId","setSelectedId","action","setAction","imagePreview","setImagePreview","creationDate","setCreationDate","modificationDate","setModificationDate","fetchIconIds","handleChange","target","files","[object Object]","handleActionChange","onSubmit","preventDefault","formDataToSend","FormData","append","toISOString","url","text","Fragment","onChange","placeholder","required","accept","maxLength","dt_criacao","dt_modificacao","isArray","statusText","fetchIconById","toLocaleString","readOnly","MosaicForm","descricao_completa","descricao_resumida","mosaicId","setMosaicId","loading","setLoading","getFromLocalStorage","getItem","tituloCelula","idIcone","descricaoCompleta","descricaoResumida","conteudoEfetivo","parsedData","parse","prevFormData","isInitialLoad","setIsInitialLoad","urlParams","URLSearchParams","window","location","search","hasReloaded","get","set","toString","style","height","width","Error","Login","onLogin","username","setUsername","password","setPassword","implementation","setImplementation","setError","process","App","isAuthenticated","setIsAuthenticated","showLogin","setShowLogin","lastLogin","parseInt","Router","Routes","Route","path","element","handleLogin","Editor","Navigate","ReactDOM","createRoot","getElementById","render"],"mappings":"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","file":"static/js/main.ea59652e.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport '../styles/Alertas.css';\n\nconst Alertas = ({ alerts }) => {\n  return (\n    <div className=\"alertas-container\">\n      {alerts.map((alert) => (\n        <div key={alert.id} className={`alert alert-${alert.type}`}>\n          {alert.message}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Alertas;\n","import React, { createContext, useState, useContext } from 'react';\nimport Alertas from '../components/Alertas'; // Ajuste o caminho conforme a localização do seu componente Alertas\n\nconst AlertasContext = createContext();\n\nexport const useAlertas = () => useContext(AlertasContext);\n\nexport const AlertasProvider = ({ children }) => {\n  const [alerts, setAlerts] = useState([]);\n\n  const addAlert = (message, type = 'success') => {\n    const id = Date.now();\n    setAlerts([...alerts, { id, message, type }]);\n    setTimeout(() => removeAlert(id), 5001); // Remove automaticamente após 5 segundos\n  };\n\n  const removeAlert = (id) => {\n    setAlerts((prevAlerts) => prevAlerts.filter(alert => alert.id !== id));\n  };\n\n  return (\n    <AlertasContext.Provider value={{ addAlert }}>\n      {children}\n      <Alertas alerts={alerts} />\n    </AlertasContext.Provider>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useAlertas } from './contexts/AlertasContext'; // Importa o contexto de alertas\n\nimport './styles/Grid.css';\n\nconst Grid = () => {\n  const rows = 15;\n  const cols = 30;\n\n  const [displayIcons, setDisplayIcons] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [iframeSrc, setIframeSrc] = useState('');\n  const [isPositionSelectorActive, setIsPositionSelectorActive] = useState(false);\n  const [isDataFetchActive, setIsDataFetchActive] = useState(false); // Novo estado para o botão \"Pegar Dados\"\n  const [hoveredPosition, setHoveredPosition] = useState(null);\n  const [selectedMosaicData, setSelectedMosaicData] = useState(null); // Armazena dados do mosaico selecionado\n  const [hoveredIconData, setHoveredIconData] = useState(null); // Novo estado para armazenar os dados do ícone em hover\n\n  const navigate = useNavigate();\n  const { addAlert } = useAlertas();\n  const fetchIconsAndMosaics = async () => {\n    try {\n      // Fetch dos mosaicos\n      const mosaicsResponse = await fetch('https://gentle-nearly-marmoset.ngrok-free.app/api/mosaics', {\n        headers: { 'ngrok-skip-browser-warning': 'true' }\n      });\n\n      const mosaicsData = await mosaicsResponse.json();\n\n      // Para cada mosaico, buscamos o ícone correspondente\n      const combinedData = await Promise.all(mosaicsData.map(async (mosaic) => {\n        const iconResponse = await fetch(`https://gentle-nearly-marmoset.ngrok-free.app/api/icons/${mosaic.id_icone}`, {\n          headers: { 'ngrok-skip-browser-warning': 'true' }\n        });\n        const iconData = await iconResponse.json();\n\n        if (iconData.src && iconData.src.data) {\n          // Converte o array de bytes (Buffer) para um Blob\n          const imgBlob = new Blob([new Uint8Array(iconData.src.data)], { type: 'image/png' });\n          const imgUrl = URL.createObjectURL(imgBlob); // Cria a URL do objeto para exibição\n\n          // Retorna o mosaico com o ícone associado\n          return { ...mosaic, src: imgUrl };\n        }\n\n        return null; // Caso o ícone não tenha sido encontrado\n      }));\n\n      // Filtra mosaicos que possuem ícones associados\n      setDisplayIcons(combinedData.filter(item => item !== null));\n    } catch (error) {\n      console.error('Erro ao buscar ícones e mosaicos:', error);\n    }\n  };\n\n  useEffect(() => {\n    //localStorage.clear();\n    //clearCookies();\n    fetchIconsAndMosaics();\n  }, []);\n  const clearCookies = () => {\n    // Limpa cookies específicos\n    document.cookie = 'mosaic_data=; path=/; max-age=0';\n    document.cookie = 'position_row=; path=/; max-age=0';\n    document.cookie = 'position_col=; path=/; max-age=0';\n  \n    // Se você quiser limpar todos os cookies\n    const cookies = document.cookie.split(\";\");\n  \n    cookies.forEach(cookie => {\n      const cookieName = cookie.split(\"=\")[0].trim();\n      document.cookie = `${cookieName}=; path=/; max-age=0`; // Expira o cookie\n    });\n  };\n  const fetchMosaicByPosition = async (row, col) => {\n    try {\n      const response = await fetch(`https://gentle-nearly-marmoset.ngrok-free.app/api/mosaics/position/${row}/${col}`, {\n        headers: { 'ngrok-skip-browser-warning': 'true' }\n      });\n      const data = await response.json();\n      // Salva todos os dados do mosaico selecionado na localStorage\n      localStorage.setItem('mosaicData', JSON.stringify(data));\n      // Salva dados do mosaico selecionado para alteração posterior\n      setSelectedMosaicData(data);\n      // Salvando todos os dados do mosaico nos cookies\n      document.cookie = `mosaic_data=${JSON.stringify(data)}; path=/; max-age=${60 * 60 * 24 * 7}`; // Salva os dados completos do mosaico nos cookies\n      console.log('Dados do mosaico salvos na localStorage:', data);\n      addAlert('Mosaico selecionado', 'success')\n    } catch (error) {\n      console.error('Erro ao buscar dados do mosaico por posição:', error);\n      addAlert('Erro ao buscar dados do mosaico', 'error')\n    }\n  };\n\n  const modifyMosaicPosition = async (id, newRow, newCol) => {\n    try {\n      const response = await fetch(`https://gentle-nearly-marmoset.ngrok-free.app/api/mosaics/modify/${id}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json', 'ngrok-skip-browser-warning': 'true' },\n        body: JSON.stringify({ posicao_linha: newRow, posicao_coluna: newCol }), // Carrega newRow e newCol para o backend\n      });\n      if (response.ok) {\n        addAlert('Posição do mosaico alterada!', 'success')\n        console.log(`Mosaico atualizado para a nova posição: Linha ${newRow}, Coluna ${newCol}`);\n      } else {\n        console.error('Erro ao atualizar posição do mosaico');\n      }\n    } catch (error) {\n      console.error('Erro ao enviar dados de atualização:', error);\n    }\n  };\n  useEffect(() => {\n    fetchIconsAndMosaics();\n\n    const positionRow = getCookie('position_row');\n    const positionCol = getCookie('position_col');\n\n    if (positionRow && positionCol) {\n      fetchMosaicByPosition(positionRow, positionCol);\n    }\n  }, []);\n\n  const getCookie = (name) => {\n    const value = document.cookie;\n    const parts = value.split(`; ${name}=`);\n    if (parts.length === 2) return parts.pop().split(';').shift();\n    return null;\n  };\n\n  const handleIconClick = (origemConteudo) => {\n    setIframeSrc(origemConteudo);\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setIframeSrc('');\n  };\n\n  const togglePositionSelector = () => {\n    setIsPositionSelectorActive(!isPositionSelectorActive);\n    setHoveredPosition(null);\n  };\n\n  const toggleDataFetch = () => {\n    setIsDataFetchActive(!isDataFetchActive);\n    setHoveredPosition(null);\n  };\n\n  const handleMouseOver = (row, col) => {\n    if (isPositionSelectorActive || isDataFetchActive) {\n      setHoveredPosition({ row, col });\n    }\n  };\n  const handlePositionSelect = (row, col) => {\n    if (isDataFetchActive) {\n      fetchMosaicByPosition(row, col);\n      setIsDataFetchActive(false); // Desativa o modo \"Pegar Dados\" após a busca\n\n    } else if (isPositionSelectorActive) {\n      copyPositionToCookiesAndNavigate(row, col);\n    } else if (selectedMosaicData) {\n      // Modo de atualização de posição\n      const updatedData = { ...selectedMosaicData, posicao_linha: row, posicao_coluna: col };\n      localStorage.setItem('mosaicData', JSON.stringify(updatedData)); // Atualiza no localStorage\n      updateMosaicInDatabase(updatedData); // Atualiza no banco de dados\n      setSelectedMosaicData(null); // Limpa os dados do mosaico selecionado\n    }\n  };\n\n  const copyPositionToCookiesAndNavigate = (row, col) => {\n    document.cookie = `position_row=${row}; path=/; max-age=${60 * 60 * 24 * 7}`;\n    document.cookie = `position_col=${col}; path=/; max-age=${60 * 60 * 24 * 7}`;\n\n    const positionText = `Linha ${row}, Coluna ${col}`;\n    navigator.clipboard.writeText(positionText).then(() => {\n      console.log('Texto copiado para a área de transferência!');\n      fetchMosaicByPosition(row, col); // Busca dados do mosaico com os valores atualizados\n      navigate('/TLM-Producao/MosaicEditor'); // Redireciona para o MosaicEditor\n    }).catch((err) => {\n      console.error('Erro ao copiar o texto:', err);\n    });\n  };\n  const updateMosaicInDatabase = async (mosaicData) => {\n    try {\n      const response = await fetch(`https://gentle-nearly-marmoset.ngrok-free.app/api/mosaics/modify-position/${mosaicData.id}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json', 'ngrok-skip-browser-warning': 'true' },\n        body: JSON.stringify({\n          posicao_linha: mosaicData.posicao_linha,\n          posicao_coluna: mosaicData.posicao_coluna\n        }),\n      });\n      if (response.ok) {\n        addAlert('Posição do mosaico atualizada com sucesso no banco de dados!', 'success');\n        console.log('Posição do mosaico atualizada no banco de dados:', mosaicData);\n      } else {\n        console.error('Erro ao atualizar posição do mosaico no banco de dados');\n        addAlert('Erro ao atualizar posição do mosaico no banco de dados', 'error');\n      }\n    } catch (error) {\n      console.error('Erro ao enviar atualização da posição do mosaico:', error);\n      addAlert('Erro ao enviar atualização da posição do mosaico', 'error');\n    }\n  };\n\n  const renderIcon = (icon) => (\n    <div\n      className=\"icon-container\"\n      onMouseEnter={() => setHoveredIconData({ id: icon.id, titulo_celula: icon.titulo_celula })} // Armazena os dados do ícone ao passar o mouse\n      onMouseLeave={() => setHoveredIconData(null)} // Limpa os dados ao sair com o mouse\n    >\n      <img\n        src={icon.src}\n        alt={icon.titulo_celula}\n        className=\"icon\"\n        onClick={() => {\n          if (icon.conteudo_efetivo === 0) {\n            handleIconClick(icon.origem_conteudo);\n          }\n        }}\n      />\n      {hoveredIconData && hoveredIconData.id === icon.id && (\n        <div className=\"hover-text\">\n          <span>ID: {hoveredIconData.id} | </span>\n          <span>{hoveredIconData.titulo_celula}</span>\n        </div>\n      )}\n    </div>\n  );\n\n  const squares = Array.from({ length: rows }, (_, row) =>\n    Array.from({ length: cols }, (_, col) => {\n      const id = `square-${col + 1}-${row + 1}`;\n      const iconInSquare = displayIcons.find(icon => icon.posicao_linha === row + 1 && icon.posicao_coluna === col + 1);\n\n      return (\n        <div\n          key={id}\n          id={id}\n          className=\"square\"\n          onMouseOver={() => handleMouseOver(row + 1, col + 1)}\n          onClick={() => handlePositionSelect(row + 1, col + 1)} // Passa a posição diretamente\n        >\n          {iconInSquare ? renderIcon(iconInSquare) : null}\n        </div>\n      );\n    })\n  ).flat();\n  return (\n    <div className=\"grid-container\">\n      <div className=\"button-container\">\n        <button id='teste'className='editar-mosaico' onClick={togglePositionSelector}>\n          {isPositionSelectorActive ? 'Desativar Seleção de Posição' : 'Selecionar Posição'}\n        </button>\n        <button id='teste2' onClick={toggleDataFetch}>\n          {isDataFetchActive ? 'Cancelar' : 'Reposicionar Mosaico'}\n        </button>\n        {hoveredPosition && (\n          <div className=\"position-indicator\">\n            Posição: Linha {hoveredPosition.row}, Coluna {hoveredPosition.col}\n          </div>\n        )}\n        <Link to=\"/TLM-Producao/MosaicEditor\">\n          <button id='teste3' className=\"icon-editor-button\">Editor de Mosaicos</button>\n        </Link>\n      </div>\n      {squares}\n      {isModalOpen && (\n        <div className=\"modal-overlay\" onClick={closeModal}>\n          <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n            <iframe\n              src={iframeSrc}\n              title=\"Conteúdo Externo\"\n              className=\"iframe-content\"\n              frameBorder=\"0\"\n              allowFullScreen\n            />\n            <button className=\"close-button\" onClick={closeModal}>X</button>\n          </div>\n        </div>\n      )}\n    </div>\n\n  );\n};\n\nexport default Grid;\n","// src/components/Header.js\nimport React, { useState, useEffect } from 'react';\nimport '../styles/Header.css';\n\nconst Header = () => {\n  const [logoImage, setLogoImage] = useState(null);\n\n  // Função para buscar a imagem do logo com icon_id \"logo\"\n  const fetchLogoImage = async () => {\n    try {\n      const response = await fetch('https://gentle-nearly-marmoset.ngrok-free.app/api/icons/1', {\n        headers: {\n          'ngrok-skip-browser-warning': 'true'\n        }\n      });\n      const { src, mimetype } = await response.json();\n      const blob = new Blob([Uint8Array.from(src.data)], { type: mimetype });\n      const imageUrl = URL.createObjectURL(blob);\n      setLogoImage(imageUrl);\n    } catch (error) {\n      console.error('Erro ao conectar com o backend:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchLogoImage(); // Busca o logo ao montar o componente\n  }, []);\n\n  return (\n    <header className=\"header\">\n      {logoImage ? (\n        <img src={logoImage} alt=\"Logo\" className=\"header-logo\" />\n      ) : (\n        <p>Carregando logo...</p>\n      )}\n      <nav>\n        <ul className=\"header-nav\">\n          \n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { useState, useEffect } from 'react';\nimport './styles/Editor.css';\nimport './styles/Login.css';\nimport Header from './components/Header';\n\nconst IconEditor = () => {\n  const [formData, setFormData] = useState({\n    id: '',\n    src: null,\n    descricao: '',\n    id_implementacao: '', // novo campo para id_implementacao\n  });\n  const [iconIds, setIconIds] = useState([]);\n  const [selectedId, setSelectedId] = useState('');\n  const [action, setAction] = useState('add');\n  const [imagePreview, setImagePreview] = useState(null);\n  const [creationDate, setCreationDate] = useState(null);\n  const [modificationDate, setModificationDate] = useState(null);\n\n  // Função para buscar os IDs de ícones\n  const fetchIconIds = async () => {\n    try {\n      const response = await fetch('https://gentle-nearly-marmoset.ngrok-free.app/api/icons/ids', {\n        headers: { 'ngrok-skip-browser-warning': 'true' }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setIconIds(data);\n      } else {\n        console.error('Erro ao buscar IDs de ícones');\n      }\n    } catch (error) {\n      console.error('Erro ao conectar com o backend:', error);\n    }\n  };\n\n  // Função para buscar um ícone por ID\n  const fetchIconById = async (id) => {\n    try {\n      const response = await fetch(`https://gentle-nearly-marmoset.ngrok-free.app/api/icons/${id}`, {\n        headers: { 'ngrok-skip-browser-warning': 'true' }\n      });\n      if (response.ok) {\n        const { src, descricao, id_implementacao, dt_criacao, dt_modificacao } = await response.json();\n\n        if (src && Array.isArray(src.data) && src.type) {\n          const blob = new Blob([Uint8Array.from(src.data)], { type: src.type });\n          const imageUrl = URL.createObjectURL(blob);\n          setImagePreview(imageUrl);\n        }\n\n        setCreationDate(dt_criacao);\n        setModificationDate(dt_modificacao);\n        setFormData({ descricao, id_implementacao });\n      } else {\n        console.error('Erro ao buscar o ícone:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao conectar com o backend:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchIconIds();\n  }, []);\n\n  const handleChange = (e) => {\n    const { name, type, value } = e.target;\n    if (type === 'file') {\n      setFormData({ ...formData, src: e.target.files[0] });\n    } else {\n      setFormData({ ...formData, [name]: value });\n    }\n  };\n\n  const handleActionChange = (e) => {\n    setAction(e.target.value);\n    setSelectedId('');\n    setImagePreview(null);\n    setFormData({ id: '', src: null, descricao: '', id_implementacao: '' });\n    setCreationDate(null);\n    setModificationDate(null);\n  };\n\n  const handleDelete = async () => {\n    try {\n      const response = await fetch(`https://gentle-nearly-marmoset.ngrok-free.app/api/icons/delete/${selectedId}`, {\n        method: 'DELETE',\n        headers: { 'Content-Type': 'application/json','ngrok-skip-browser-warning': 'true' },\n      });\n\n      if (response.ok) {\n        alert('Ícone deletado com sucesso!');\n        fetchIconIds();\n        setImagePreview(null);\n        setFormData({ id: '', src: null, descricao: '', id_implementacao: '' });\n        setSelectedId('');\n      } else {\n        const error = await response.text();\n        console.error('Erro ao deletar o ícone:', error);\n      }\n    } catch (error) {\n      console.error('Erro ao conectar com o backend:', error);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const formDataToSend = new FormData();\n\n    if (action === 'add') {\n      formDataToSend.append('icon_id', formData.id);\n      formDataToSend.append('src', formData.src);\n      formDataToSend.append('descricao', formData.descricao);\n      formDataToSend.append('id_implementacao', formData.id_implementacao);\n      formDataToSend.append('dt_criacao', new Date().toISOString());\n    } else if (action === 'modify') {\n      formDataToSend.append('icon_id', selectedId);\n      formDataToSend.append('src', formData.src);\n      formDataToSend.append('descricao', formData.descricao);\n      formDataToSend.append('id_implementacao', formData.id_implementacao);\n      formDataToSend.append('dt_modificacao', new Date().toISOString());\n    }\n\n    try {\n      const url = `https://gentle-nearly-marmoset.ngrok-free.app/api/icons/${action === 'add' ? 'add' : 'modify'}`;\n      const method = action === 'add' ? 'POST' : 'PUT'\n\n      const response = await fetch(url, {\n        method,\n        body: formDataToSend,\n        headers: { 'ngrok-skip-browser-warning': 'true' },\n      });\n\n      if (response.ok) {\n        alert(`Ícone ${action === 'add' ? 'adicionado' : 'modificado'} com sucesso!`);\n        fetchIconIds();\n        setImagePreview(null);\n        setFormData({ id: '', src: null, descricao: '', id_implementacao: '' });\n        setSelectedId('');\n      } else {\n        const error = await response.text();\n        console.error('Erro ao enviar os dados:', error);\n      }\n    } catch (error) {\n      console.error('Erro ao conectar com o backend:', error);\n    }\n  };\n\n  return (\n    <div className=\"icon-editor-container\">\n      <Header />\n      <div className='icon-editor-label-title'>\n        <h2 className=\"icon-editor-title\">Editor de ícones</h2>\n      </div>\n      <form className=\"icon-editor-form\" onSubmit={handleSubmit}>\n        {action === 'add' && (\n          <>\n              <select className='select' onChange={handleActionChange} value={action}>\n                <option value=\"add\">Adicionar Ícone</option>\n                <option value=\"modify\">Modificar Ícone</option>\n              </select>\n            <div className=\"form-group\">\n              <label className=\"icon-editor-label\">ID do Ícone:</label>\n              <input\n                type=\"text\"\n                name=\"id\"\n                value={formData.id}\n                onChange={handleChange}\n                placeholder=\"Digite o ID do ícone\"\n                className=\"icon-editor-input\"\n                required\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"icon-editor-label\">Descrição:</label>\n              <input\n                type=\"text\"\n                name=\"descricao\"\n                value={formData.descricao}\n                onChange={handleChange}\n                placeholder=\"Digite a descrição do ícone\"\n                className=\"icon-editor-input\"\n                required\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"icon-editor-label\">Carregar Imagem:</label>\n              <input\n                type=\"file\"\n                name=\"src\"\n                onChange={handleChange}\n                accept=\"image/*\"\n                className=\"icon-editor-input-file\"\n                required\n              />\n            </div>\n            <button type=\"submit\" className=\"icon-editor-button-salvar\">Salvar</button>\n          </>\n        )}\n\n        {action === 'modify' && (\n          <>\n              <select className='select' onChange={handleActionChange} value={action}>\n                <option value=\"add\">Adicionar Ícone</option>\n                <option value=\"modify\">Modificar Ícone</option>\n              </select>\n            <div className=\"form-group\">\n            <label className=\"icon-editor-label\">ID da Implementação:</label>\n            <input\n              type=\"text\"\n              name=\"id_implementacao\"\n              value={formData.id_implementacao}\n              onChange={handleChange}\n              placeholder=\"Digite o ID de implementação\"\n              className=\"icon-editor-input\"\n              required\n            />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"icon-editor-label\">ID do Ícone:</label>\n              <input\n                type=\"number\"\n                maxLength=\"3\"\n                value={selectedId}\n                onChange={(e) => {\n                  setSelectedId(e.target.value);\n                  if (e.target.value.length <= 3) {\n                    fetchIconById(e.target.value);\n                  }\n                }}\n                placeholder=\"Digite o ID do ícone\"\n                className=\"icon-editor-input\"\n                required\n              />\n            </div>\n              {imagePreview && (\n                  <div className=\"view-icon\">\n                    <label className=\"icon-editor-label-imagem\">Imagem Preview:</label>\n                    <img src={imagePreview} alt=\"Imagem preview\" className=\"icon-editor-img-preview\" />\n                  </div>\n                )}\n\n              {creationDate && (\n                <div className=\"form-group\">\n                  <label className=\"icon-editor-label\">Data de Criação:</label>\n                  <input\n                    type=\"text\"\n                    value={new Date(creationDate).toLocaleString()}\n                    readOnly\n                    className=\"icon-editor-input\"\n                  />\n                </div>\n              )}\n\n              {modificationDate && (\n                <div className=\"form-group\">\n                  <label className=\"icon-editor-label\">Última Modificação:</label>\n                  <input\n                    type=\"text\"\n                    value={new Date(modificationDate).toLocaleString()}\n                    readOnly\n                    className=\"icon-editor-input\"\n                  />\n                </div>\n              )}\n\n              <div className=\"form-group\">\n                <label className=\"icon-editor-label\">Descrição:</label>\n                <input\n                  type=\"text\"\n                  name=\"descricao\"\n                  value={formData.descricao}\n                  onChange={handleChange}\n                  placeholder=\"Digite a descrição do ícone\"\n                  className=\"icon-editor-input\"\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label className=\"icon-editor-label\">Novo Ícone:</label>\n                <input\n                  type=\"file\"\n                  name=\"src\"\n                  onChange={handleChange}\n                  accept=\"image/*\"\n                  className=\"icon-editor-input-file\"\n                />\n              </div>\n            <div>\n              <button type=\"submit\" className=\"icon-editor-button-atualizar\">Atualizar</button>\n              <button type=\"button\" onClick={handleDelete} className=\"icon-editor-button-deletar\">Deletar</button>\n            </div>\n          </>\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default IconEditor;\n","import React, { useState, useEffect } from 'react';\nimport './styles/Editor.css';\nimport Header from './components/Header';\nimport { Link } from 'react-router-dom';\nimport { useAlertas } from './contexts/AlertasContext'; // Importa o contexto de alertas\n\nfunction MosaicForm() {\n  const [formData, setFormData] = useState({\n    posicao_linha: '',\n    posicao_coluna: '',\n    titulo_celula: '',\n    id_icone: '',\n    descricao_completa: '',\n    descricao_resumida: '',\n    conteudo_efetivo: '',\n    origem_conteudo: '',\n  });\n  const [mosaicId, setMosaicId] = useState('');\n  const [iconIds, setIconIds] = useState([]);\n  const [action, setAction] = useState('add');\n  const { addAlert } = useAlertas();\n  const [loading, setLoading] = useState(true);\n  const [imagePreview, setImagePreview] = useState(null);\n  const getFromLocalStorage = (key) => {\n    return localStorage.getItem(key) ? localStorage.getItem(key) : '';\n  };\n\n  const getCookie = (name) => {\n    const value = `; ${document.cookie}`;\n    const parts = value.split(`; ${name}=`);\n    if (parts.length === 2) return parts.pop().split(';').shift();\n    return null;\n  };\n\n  useEffect(() => {\n    // Carregar dados da localStorage e cookies apenas após o carregamento inicial da página\n    if (!loading) {\n      const id_mosaico = getFromLocalStorage('id');\n      const positionRow = getFromLocalStorage('position_row');\n      const positionCol = getFromLocalStorage('position_col');\n      const tituloCelula = getFromLocalStorage('titulo_celula');\n      const idIcone = getFromLocalStorage('id_icone');\n      const descricaoCompleta = getFromLocalStorage('descricao_completa');\n      const descricaoResumida = getFromLocalStorage('descricao_resumida');\n      const conteudoEfetivo = getFromLocalStorage('conteudo_efetivo');\n      const origemConteudo = getFromLocalStorage('origem_conteudo');\n\n      setFormData({\n        posicao_linha: positionRow || '',\n        posicao_coluna: positionCol || '',\n        titulo_celula: tituloCelula || '',\n        id_icone: idIcone || '',\n        descricao_completa: descricaoCompleta || '',\n        descricao_resumida: descricaoResumida || '',\n        conteudo_efetivo: conteudoEfetivo || '',\n        origem_conteudo: origemConteudo || '',\n      });\n\n      const mosaicData = getCookie('mosaic_data');\n      if (mosaicData) {\n        const parsedData = JSON.parse(mosaicData);\n        setFormData((prevFormData) => ({\n          ...prevFormData,\n          ...parsedData,\n        }));\n      }\n    }\n  }, [loading]);\n\n  useEffect(() => {\n    setLoading(false); // Definindo que a página carregou completamente\n  }, []);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n    if (name === 'id_icone') {\n      fetchIconIds(value); // Chama a função para buscar o ícone quando o ID for alterado\n    }\n  };\n  // Função para buscar os IDs de ícones\n  const fetchIconIds = async (id) => {\n    if (!id) return; // Não faz fetch se o ID estiver vazio\n    try {\n      const response = await fetch(`https://gentle-nearly-marmoset.ngrok-free.app/api/icons/${id}`, {\n        headers: { 'ngrok-skip-browser-warning': 'true' }\n      });\n      if (response.ok) {\n        const { src } = await response.json();\n        if (src && Array.isArray(src.data) && src.type) {\n          const blob = new Blob([Uint8Array.from(src.data)], { type: src.type });\n          const imageUrl = URL.createObjectURL(blob);\n          setImagePreview(imageUrl);\n        } else {\n          setImagePreview(null); // Se não encontrar imagem\n        }\n      } else {\n        setImagePreview(null); // Se falhar ao buscar o ícone\n      }\n    } catch (error) {\n      console.error('Erro ao buscar o ícone:', error);\n      setImagePreview(null);\n    }\n  };\n  // Função para buscar um ícone por ID\n  const fetchIconById = async (id) => {\n    try {\n      const response = await fetch(`https://gentle-nearly-marmoset.ngrok-free.app/api/icons/${id}`, {\n        headers: { 'ngrok-skip-browser-warning': 'true' }\n      });\n      if (response.ok) {\n        const { src, } = await response.json();\n\n        if (src && Array.isArray(src.data) && src.type) {\n          const blob = new Blob([Uint8Array.from(src.data)], { type: src.type });\n          const imageUrl = URL.createObjectURL(blob);\n          setImagePreview(imageUrl);\n        }\n      } else {\n        console.error('Erro ao buscar o ícone:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao conectar com o backend:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchIconIds();\n  }, []);\n\n  const handleActionChange = (e) => {\n    setAction(e.target.value);\n    setMosaicId('');\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch('https://gentle-nearly-marmoset.ngrok-free.app/api/mosaics/add', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'ngrok-skip-browser-warning': 'true',\n        },\n        body: JSON.stringify(formData),\n      });\n      if (response.ok) {\n        addAlert('Mosaico adicionado com sucesso!', 'success');\n      } else {\n        throw new Error('Erro ao adicionar mosaico');\n      }\n    } catch (error) {\n      console.error(error);\n      addAlert('Erro ao adicionar mosaico.', 'error');\n    }\n  };\n\n  const handleUpdate = async (e) => {\n    e.preventDefault();\n    if (!mosaicId) {\n      addAlert('Por favor, forneça um ID de mosaico para modificar.', 'error');\n      return;\n    }\n    try {\n      const response = await fetch(`https://gentle-nearly-marmoset.ngrok-free.app/api/mosaics/modify/${mosaicId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'ngrok-skip-browser-warning': 'true',\n        },\n        body: JSON.stringify(formData),\n      });\n      if (response.ok) {\n        addAlert('Mosaico modificado com sucesso!', 'success');\n      } else {\n        throw new Error('Erro ao modificar mosaico');\n      }\n    } catch (error) {\n      console.error(error);\n      addAlert('Erro ao modificar mosaico.', 'error');\n    }\n  };\n\n  const handleDelete = async (e) => {\n    e.preventDefault();\n    if (!mosaicId) {\n      addAlert('Por favor, forneça um ID de mosaico para deletar.', 'error');\n      return;\n    }\n    try {\n      const response = await fetch(`https://gentle-nearly-marmoset.ngrok-free.app/api/mosaics/delete/${mosaicId}`, {\n        method: 'DELETE',\n        headers: {\n          'ngrok-skip-browser-warning': 'true',\n        },\n      });\n      if (response.ok) {\n        addAlert('Mosaico deletado com sucesso!', 'success');\n      } else {\n        throw new Error('Erro ao deletar mosaico');\n      }\n    } catch (error) {\n      console.error(error);\n      addAlert('Erro ao deletar mosaico.', 'error');\n    }\n  };\n  const [isInitialLoad, setIsInitialLoad] = useState(true);\n\n  useEffect(() => {\n    // Verifica se o parâmetro `reloaded` está na URL\n    const urlParams = new URLSearchParams(window.location.search);\n    const hasReloaded = urlParams.get('reloaded');\n\n    if (isInitialLoad && !hasReloaded) {\n      setIsInitialLoad(false);\n\n      // Define um timer para recarregar a página após 1 segundo com o parâmetro `reloaded`\n      setTimeout(() => {\n        urlParams.set('reloaded', 'true');\n        window.location.search = urlParams.toString();\n      }, 1000);\n    }\n  }, [isInitialLoad]);\n  return (\n    <div className=\"icon-editor-container\">\n      <Header />\n      <div className=\"icon-editor-label-title\">\n        <h2 className=\"icon-editor-title\">Editor de Mosaicos</h2>\n      </div>\n\n      <form\n        className=\"icon-editor-form\"\n      >\n        {action === 'add' && (\n          <>\n            <div className=\"form-group\">\n              <label className=\"icon-editor-label\">ID do Mosaico:</label>\n              <input\n                type=\"text\"\n                value={mosaicId}\n                onChange={(e) => setMosaicId(e.target.value)}\n                className=\"icon-editor-input\"\n                placeholder=\"Digite o ID do mosaico a ser alterado\"\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"icon-editor-label\">Posição Linha:</label>\n              <input\n                type=\"number\"\n                name=\"posicao_linha\"\n                value={formData.posicao_linha}\n                onChange={handleChange}\n                className=\"icon-editor-input\"\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"icon-editor-label\">Posição Coluna:</label>\n              <input\n                type=\"number\"\n                name=\"posicao_coluna\"\n                value={formData.posicao_coluna}\n                onChange={handleChange}\n                className=\"icon-editor-input\"\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"icon-editor-label\">Título Célula:</label>\n              <input\n                type=\"text\"\n                name=\"titulo_celula\"\n                value={formData.titulo_celula}\n                onChange={handleChange}\n                className=\"icon-editor-input\"\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"icon-editor-label\">ID Ícone:</label>\n              <input\n                type=\"number\"\n                name=\"id_icone\"\n                value={formData.id_icone}\n                onChange={(e) => {\n                  handleChange(e);\n                  fetchIconById(e.target.value); // Chama a função para buscar o ícone\n                }}\n                className=\"icon-editor-input\"\n                required\n              />\n            </div>\n            {imagePreview && (\n              <div className=\"view-icon-mosaic2\">\n                <label className=\"icon-editor-label-imagem\">Imagem Preview:</label>\n                <img src={imagePreview} alt=\"Preview\" className=\"icon-editor-img-preview\" />\n              </div>\n            )}\n\n            <div className=\"form-group\">\n              <label className=\"icon-editor-label\">Descrição Completa:</label>\n              <textarea\n                name=\"descricao_completa\"\n                value={formData.descricao_completa}\n                onChange={handleChange}\n                className=\"icon-editor-input\"\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"icon-editor-label\">Descrição Resumida:</label>\n              <textarea\n                name=\"descricao_resumida\"\n                value={formData.descricao_resumida}\n                onChange={handleChange}\n                className=\"icon-editor-input\"\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              Tipo de conteudo:\n              <select\n                name=\"conteudo_efetivo\"\n                value={formData.conteudo_efetivo}\n                onChange={handleChange}\n                className=\"icon-editor-input\"\n                style={{ height: '20.6px', width:'318.6px' }}\n                required\n              >\n                <option value=\"0\">URL</option>\n                <option value=\"1\">Foto</option>\n                <option value=\"2\">Texto</option>\n                <option value=\"3\">Vídeo</option>\n                <option value=\"4\">Link Genérico</option>\n              </select>\n            </div>\n            <div className=\"form-group\">\n              <label className=\"icon-editor-label\">Conteúdo:</label>\n              <textarea\n                name=\"origem_conteudo\"\n                value={formData.origem_conteudo}\n                onChange={handleChange}\n                className=\"icon-editor-input\"\n                required\n              />\n            </div>\n\n            <button onClick={handleSubmit}id='botao-salvar' className=\"icon-editor-button\">Adicionar</button>\n            <button onClick={handleUpdate}id='botao-modificar' className=\"icon-editor-button-atualizar\">Modificar</button>\n            <button onClick={handleDelete} id='botao-deletar' className=\"icon-editor-button-deletar\">Deletar</button>\n          </>\n        )}\n        <Link to='/TLM-Producao/' className=\"voltar-mosaic\">Voltar</Link>\n      </form>\n\n    </div>\n  );\n}\n\nexport default MosaicForm;","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './styles/Login.css';\n\nconst Login = ({ onLogin }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [implementation, setImplementation] = useState('0'); // Estado para a implementação selecionada\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n\n    if (username === 'tlm' && password === '123') {\n      onLogin();\n      navigate(`/TLM-Producao?implem=${implementation}`); // Redireciona para a rota principal com a implementação selecionada\n    } else {\n      setError('Credenciais inválidas. Tente novamente.');\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      <img className=\"logosss\" src={process.env.PUBLIC_URL + '/assets/logonova.png'} alt=\"Logo\" />\n      <form onSubmit={handleLogin} className='main-div'>\n        <h2 className='panel h2'>Identificação do usuário</h2>\n        <p className='panel p'>Insira seu Usuário e senha</p>\n        <div className=\"input-group\">\n          <input className='form-control'\n            type=\"text\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            placeholder=\"Usuário\"\n          />\n        </div>\n        <div className=\"input-group\">\n          <input className='form-control'\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            placeholder=\"Senha\"\n          />\n        </div>\n        <div className=\"implementacao\">\n          <label className='panel'>Implementação</label>\n          <select className='select-imp' value={implementation} onChange={(e) => setImplementation(e.target.value)}>\n            <option value=\"0\">Implementação 0</option>\n            <option value=\"1\">Implementação 1</option>\n          </select>\n        </div>\n        {error && <p className=\"error\">{error}</p>}\n        <button type=\"submit\" className=\"login-button\">Entrar</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;","import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport './styles/index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Grid from './Grid';\nimport Editor from './Editor';\nimport MosaicForm from './mosaicEditor';\nimport Login from './Login';\nimport { AlertasProvider } from './contexts/AlertasContext';\n\nconst LOGIN_TIMEOUT = 1000 * 60 * 1000; // 5 minutos em milissegundos\n\nconst App = () => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [showLogin, setShowLogin] = useState(true);\n\n  useEffect(() => {\n    const lastLogin = localStorage.getItem('lastLogin');\n    if (lastLogin && Date.now() - parseInt(lastLogin, 10) < LOGIN_TIMEOUT) {\n      setIsAuthenticated(true);\n      setShowLogin(false);\n    }\n  }, []);\n\n  const handleLogin = () => {\n    setIsAuthenticated(true);\n    setShowLogin(false);\n    localStorage.setItem('lastLogin', Date.now().toString()); // Armazena o tempo de login\n  };\n\n  return (\n    <AlertasProvider>\n      <Router>\n        <Routes>\n          {showLogin ? (\n            <Route path=\"/\" element={<Login onLogin={handleLogin} />} />\n          ) : (\n            <>\n              <Route path=\"/TLM-Producao\" element={<Grid />} />\n              <Route path=\"/TLM-Producao/Editor\" element={<Editor />} />\n              <Route path=\"/TLM-Producao/Mosaiceditor\" element={<MosaicForm />} />\n              <Route path=\"/\" element={<Navigate to=\"/TLM-Producao\" />} />\n              <Route path=\"*\" element={<Navigate to=\"/\" />} />\n            </>\n          )}\n\n        </Routes>\n      </Router>\n    </AlertasProvider>\n  );\n};\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n\nreportWebVitals();\n"],"sourceRoot":""}